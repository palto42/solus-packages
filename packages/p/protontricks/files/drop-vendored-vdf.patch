From 4198b7ea82369a91e3084d6e185f9b370f78eaec Mon Sep 17 00:00:00 2001
From: Janne Pulkkinen <janne.pulkkinen@protonmail.com>
Date: Mon, 16 Sep 2024 08:22:03 +0300
Subject: [PATCH] Vendor patched version of 'vdf'

Vendor patched version of 'vdf' library and use it in case the installed
version does not support the `key_table` argument which we need to
actually parse the `appinfo.vdf` files created by the newest stable
Steam.

This approach is cursed and will probably upset package maintainers,
but it seems like the only reasonable option aside from maintaining a
beta version of Protontricks indefinitely until a new 'vdf' release
appears on PyPI.

PACKAGE MAINTAINERS: This commit can be dropped if the system 'vdf'
already has the `key_table` argument (e.g. it uses the
@Solsticegamestudios fork).
---
 src/protontricks/steam.py         |  19 +-

diff --git a/src/protontricks/steam.py b/src/protontricks/steam.py
index 644124c..c3c8eb3 100644
--- a/src/protontricks/steam.py
+++ b/src/protontricks/steam.py
@@ -8,7 +8,8 @@
 
 import vdf
 
-from .util import lower_dict, is_steam_deck
+from ._vdf import binary_loads as vendored_binary_loads
+from .util import is_steam_deck, lower_dict
 
 __all__ = (
     "COMMON_STEAM_DIRS", "SteamApp", "find_steam_installations",
@@ -561,9 +562,19 @@ def _iter_v29_appinfo(data, start):
 
             i += section_size
 
-            vdf_d = vdf.binary_loads(
-                data[i:i+vdf_section_size], key_table=key_table
-            )
+            try:
+                vdf_d = vdf.binary_loads(
+                    data[i:i+vdf_section_size], key_table=key_table
+                )
+            except TypeError:
+                # System 'vdf' is too old and does not support 'key_table',
+                # use the bundled one instead. This is cursed, but it's
+                # so far the only reasonable option without a proper maintained
+                # release on PyPI.
+                vdf_d = vendored_binary_loads(
+                    data[i:i+vdf_section_size], key_table=key_table
+                )
+
             vdf_d = lower_dict(vdf_d)
             yield vdf_d
 
