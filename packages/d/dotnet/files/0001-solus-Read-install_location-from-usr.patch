From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Fri, 7 Jun 2024 00:36:52 -0500
Subject: [PATCH] solus: Read install_location from /usr

On Solus we don't want to have package files installed outside of /usr. While we install a compat symlink we should still make our own package read the real path directly.
---
 src/diagnostics/src/SOS/extensions/hostcoreclr.cpp     | 10 +++++-----
 src/runtime/src/native/corehost/hostmisc/pal.unix.cpp  |  2 +-
 .../Helpers/DotnetHostHelper.cs                        |  2 +-
 3 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/diagnostics/src/SOS/extensions/hostcoreclr.cpp b/src/diagnostics/src/SOS/extensions/hostcoreclr.cpp
index db940bbf5b..07ad138968 100644
--- a/src/diagnostics/src/SOS/extensions/hostcoreclr.cpp
+++ b/src/diagnostics/src/SOS/extensions/hostcoreclr.cpp
@@ -95,16 +95,16 @@ namespace RuntimeHostingConstants
 #else
     constexpr char RuntimeSubDir[] = "/shared/Microsoft.NETCore.App";
 
-    constexpr char RuntimeInstallMarkerFile[] = "/etc/dotnet/install_location";
+    constexpr char RuntimeInstallMarkerFile[] = "/usr/lib64/dotnet/install_location";
     constexpr char RuntimeArchSpecificInstallMarkerFile[] =
 #if defined(HOST_X86)
-        "/etc/dotnet/install_location_x86";
+        "/usr/lib64/dotnet/install_location_x86";
 #elif defined(HOST_AMD64)
-        "/etc/dotnet/install_location_x64";
+        "/usr/lib64/dotnet/install_location_x64";
 #elif defined(HOST_ARM) || defined(HOST_ARMV6)
-        "/etc/dotnet/install_location_arm";
+        "/usr/lib64/dotnet/install_location_arm";
 #elif defined(HOST_ARM64)
-        "/etc/dotnet/install_location_arm64";
+        "/usr/lib64/dotnet/install_location_arm64";
 #else
         "ERROR";
 #error Hosting layer doesn't support target arch
diff --git a/src/runtime/src/native/corehost/hostmisc/pal.unix.cpp b/src/runtime/src/native/corehost/hostmisc/pal.unix.cpp
index 34520aefd7..c76bce2112 100644
--- a/src/runtime/src/native/corehost/hostmisc/pal.unix.cpp
+++ b/src/runtime/src/native/corehost/hostmisc/pal.unix.cpp
@@ -416,7 +416,7 @@ bool pal::get_global_dotnet_dirs(std::vector<pal::string_t>* recv)
 
 pal::string_t pal::get_dotnet_self_registered_config_location(pal::architecture arch)
 {
-    pal::string_t config_location = _X("/etc/dotnet");
+    pal::string_t config_location = _X("/usr/lib64/dotnet");
 
     //  ***Used only for testing***
     pal::string_t environment_install_location_override;
diff --git a/src/vstest/src/Microsoft.TestPlatform.CoreUtilities/Helpers/DotnetHostHelper.cs b/src/vstest/src/Microsoft.TestPlatform.CoreUtilities/Helpers/DotnetHostHelper.cs
index 519ee34410..2b796236dd 100644
--- a/src/vstest/src/Microsoft.TestPlatform.CoreUtilities/Helpers/DotnetHostHelper.cs
+++ b/src/vstest/src/Microsoft.TestPlatform.CoreUtilities/Helpers/DotnetHostHelper.cs
@@ -336,7 +336,7 @@ public class DotnetHostHelper : IDotnetHostHelper
 
     private string? GetMuxerFromGlobalRegistrationOnUnix(PlatformArchitecture targetArchitecture)
     {
-        string baseInstallLocation = "/etc/dotnet/";
+        string baseInstallLocation = "/usr/lib64/dotnet/";
 
         // We search for architecture specific installation
         string installLocation = $"{baseInstallLocation}install_location_{targetArchitecture.ToString().ToLowerInvariant()}";
