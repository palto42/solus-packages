From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Sat, 20 Apr 2024 15:44:38 -0500
Subject: [PATCH] Stateless

---
 Makefile.am    |  2 +-
 src/ct.c       |  9 ++++++++-
 src/nfnl_osf.c | 14 +++++++++++++-
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/Makefile.am b/Makefile.am
index 9088170b..c76b673a 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -384,7 +384,7 @@ dist_pkgdoc_SCRIPTS = \
 	files/examples/sets_and_maps.nft \
 	$(NULL)
 
-pkgsysconfdir = ${sysconfdir}/nftables/osf
+pkgsysconfdir = /usr/share/defaults/etc/nftables/osf
 
 dist_pkgsysconf_DATA = \
 	files/osf/pf.os \
diff --git a/src/ct.c b/src/ct.c
index 67934648..c2e01a12 100644
--- a/src/ct.c
+++ b/src/ct.c
@@ -28,10 +28,12 @@
 #include <datatype.h>
 #include <ct.h>
 #include <gmputil.h>
+#include <unistd.h>
 #include <utils.h>
 #include <statement.h>
 
 #define CONNLABEL_CONF	DEFAULT_INCLUDE_PATH "/connlabel.conf"
+#define CONNLABEL_CONF_VENDOR  "/usr/share/defaults/etc/connlabel.conf"
 
 static const struct symbol_table ct_state_tbl = {
 	.base		= BASE_HEXADECIMAL,
@@ -237,7 +239,12 @@ const struct datatype ct_label_type = {
 
 void ct_label_table_init(struct nft_ctx *ctx)
 {
-	ctx->output.tbl.ct_label = rt_symbol_table_init(CONNLABEL_CONF);
+    if (access(CONNLABEL_CONF, F_OK) == 0) {
+        ctx->output.tbl.ct_label = rt_symbol_table_init(CONNLABEL_CONF);
+	}
+    else {
+        ctx->output.tbl.ct_label = rt_symbol_table_init(CONNLABEL_CONF_VENDOR);
+	}
 }
 
 void ct_label_table_exit(struct nft_ctx *ctx)
diff --git a/src/nfnl_osf.c b/src/nfnl_osf.c
index 20a1bfe7..793d3f5b 100644
--- a/src/nfnl_osf.c
+++ b/src/nfnl_osf.c
@@ -351,6 +351,7 @@ static int osf_load_line(char *buffer, int len, int del,
 }
 
 #define OS_SIGNATURES DEFAULT_INCLUDE_PATH "/nftables/osf/pf.os"
+#define OS_SIGNATURES_VENDOR "/usr/share/defaults/etc/nftables/osf/pf.os"
 
 int nfnl_osf_load_fingerprints(struct netlink_ctx *ctx, int del)
 {
@@ -368,7 +369,18 @@ int nfnl_osf_load_fingerprints(struct netlink_ctx *ctx, int del)
 			nft_print(&ctx->nft->output, "Failed to open file '%s'\n",
 				  OS_SIGNATURES);
 
-		return -1;
+		if (ctx->nft->debug_mask & NFT_DEBUG_MNL)
+			nft_print(&ctx->nft->output, "Opening OS Vendor signature file '%s'\n",
+				OS_SIGNATURES_VENDOR);
+		// Try to open the vendor one
+		inf = fopen(OS_SIGNATURES_VENDOR, "r");
+		if (!inf) {
+			if (ctx->nft->debug_mask & NFT_DEBUG_MNL)
+				nft_print(&ctx->nft->output, "Failed to open vendor file '%s'\n",
+					OS_SIGNATURES_VENDOR);
+
+			return -1;
+		}
 	}
 
 	while (fgets(buf, sizeof(buf), inf)) {
