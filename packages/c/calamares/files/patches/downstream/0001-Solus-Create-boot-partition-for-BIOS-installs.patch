From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Evan Maddock <maddock.evan@vivaldi.net>
Date: Thu, 14 Mar 2024 13:08:44 -0400
Subject: [PATCH] Solus: Create boot partition for BIOS installs

Signed-off-by: Evan Maddock <maddock.evan@vivaldi.net>
---
 src/modules/partition/Config.cpp                |  7 +++++++
 src/modules/partition/core/PartitionActions.cpp | 17 ++++++++++++++---
 src/modules/partition/partition.schema.yaml     |  1 +
 3 files changed, 22 insertions(+), 3 deletions(-)

diff --git a/src/modules/partition/Config.cpp b/src/modules/partition/Config.cpp
index 2010fecdd..d2d8d2188 100644
--- a/src/modules/partition/Config.cpp
+++ b/src/modules/partition/Config.cpp
@@ -337,11 +337,18 @@ fillGSConfigurationEFI( Calamares::GlobalStorage* gs, const QVariantMap& configu
     {
         const auto efiLabel = Calamares::getString(
             efiConfiguration, "label", Calamares::getString( configurationMap, "efiSystemPartitionName" ) );
+        const auto bootLabel = Calamares::getString( configurationMap, "bootPartitionName" );
 
         if ( !efiLabel.isEmpty() )
         {
             gs->insert( "efiSystemPartitionName", efiLabel );
         }
+
+        // Read and parse key bootPartitionName
+        if ( !bootLabel.isEmpty() )
+        {
+            gs->insert( "bootPartitionName", bootLabel );
+        }
     }
 }
 
diff --git a/src/modules/partition/core/PartitionActions.cpp b/src/modules/partition/core/PartitionActions.cpp
index b5fb0cafb..7581ec6b6 100644
--- a/src/modules/partition/core/PartitionActions.cpp
+++ b/src/modules/partition/core/PartitionActions.cpp
@@ -116,7 +116,8 @@ doAutopartition( PartitionCoreModule* core, Device* dev, Choices::AutoPartitionO
 
     core->createPartitionTable( dev, partType );
 
-    if ( isEfi )
+    // On Solus we always want to create a /boot partition
+    if ( true )
     {
         qint64 uefisys_part_sizeB = PartUtils::efiFilesystemRecommendedSize();
         qint64 efiSectorCount = Calamares::bytesToSectors( uefisys_part_sizeB, dev->logicalSize() );
@@ -136,9 +137,19 @@ doAutopartition( PartitionCoreModule* core, Device* dev, Choices::AutoPartitionO
                                                                   KPM_PARTITION_FLAG( None ) );
         PartitionInfo::setFormat( efiPartition, true );
         PartitionInfo::setMountPoint( efiPartition, o.efiPartitionMountPoint );
-        if ( gs->contains( "efiSystemPartitionName" ) )
+        if ( isEfi )
         {
-            efiPartition->setLabel( gs->value( "efiSystemPartitionName" ).toString() );
+            if ( gs->contains( "efiSystemPartitionName" ) )
+            {
+                efiPartition->setLabel( gs->value( "efiSystemPartitionName" ).toString() );
+            }
+        }
+        else
+        {
+            if ( gs->contains( "bootPartitionName" ) )
+            {
+                efiPartition->setLabel( gs->value( "bootPartitionName" ).toString() );
+            }
         }
         core->createPartition( dev, efiPartition, KPM_PARTITION_FLAG_ESP );
         firstFreeSector = lastSector + 1;
diff --git a/src/modules/partition/partition.schema.yaml b/src/modules/partition/partition.schema.yaml
index 769c1abae..ccd316535 100644
--- a/src/modules/partition/partition.schema.yaml
+++ b/src/modules/partition/partition.schema.yaml
@@ -10,6 +10,7 @@ properties:
     efiSystemPartition: { type: string }  # Deprecated alias of efi.mountPoint
     efiSystemPartitionSize: { type: string } # Deprecated alias of efi.recommendedSize
     efiSystemPartitionName: { type: string } # Deprecated alias of efi.label
+    bootPartitionName: { type: string }
 
     efi:
         type: object
