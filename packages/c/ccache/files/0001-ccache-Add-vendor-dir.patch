From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Reilly Brogan <reilly@reillybrogan.com>
Date: Thu, 10 Aug 2023 15:21:20 -0500
Subject: [PATCH] ccache: Add vendor dir

---
 cmake/GenerateConfigurationFile.cmake |  6 ++++++
 cmake/config.h.in                     |  2 ++
 src/ccache/Config.cpp                 | 17 +++++++++++++++++
 3 files changed, 25 insertions(+)

diff --git a/cmake/GenerateConfigurationFile.cmake b/cmake/GenerateConfigurationFile.cmake
index bf2cd5a5..1fceb90d 100644
--- a/cmake/GenerateConfigurationFile.cmake
+++ b/cmake/GenerateConfigurationFile.cmake
@@ -105,5 +105,11 @@ endif()
 file(TO_NATIVE_PATH "${CMAKE_INSTALL_FULL_SYSCONFDIR}" CONFIG_SYSCONFDIR_C_ESCAPED)
 string(REPLACE "\\" "\\\\" CONFIG_SYSCONFDIR_C_ESCAPED "${CONFIG_SYSCONFDIR_C_ESCAPED}")
 
+# Escape backslashes in VENDORDIR for C.
+if(VENDORDIR)
+  file(TO_NATIVE_PATH "${VENDORDIR}" CONFIG_VENDORDIR_C_ESCAPED)
+  string(REPLACE "\\" "\\\\" CONFIG_VENDORDIR_C_ESCAPED "${CONFIG_VENDORDIR_C_ESCAPED}")
+endif()
+
 configure_file(${CMAKE_SOURCE_DIR}/cmake/config.h.in
                ${CMAKE_BINARY_DIR}/config.h @ONLY)
diff --git a/cmake/config.h.in b/cmake/config.h.in
index f39a18fc..f60cd202 100644
--- a/cmake/config.h.in
+++ b/cmake/config.h.in
@@ -211,6 +211,8 @@ typedef int pid_t;
 
 #define SYSCONFDIR "@CONFIG_SYSCONFDIR_C_ESCAPED@"
 
+#define VENDORDIR "@CONFIG_VENDORDIR_C_ESCAPED@"
+
 #cmakedefine INODE_CACHE_SUPPORTED
 
 // Buffer size for I/O operations. Should be a multiple of 4 KiB.
diff --git a/src/ccache/Config.cpp b/src/ccache/Config.cpp
index b4974e1e..356bcae2 100644
--- a/src/ccache/Config.cpp
+++ b/src/ccache/Config.cpp
@@ -63,6 +63,11 @@ DLLIMPORT extern char** environ;
 // Make room for binary patching at install time.
 const char k_sysconfdir[4096 + 1] = SYSCONFDIR;
 
+#ifdef VENDORDIR
+// Make room for binary patching at install time.
+const char k_vendordir[4096 + 1] = VENDORDIR;
+#endif
+
 namespace fs = util::filesystem;
 
 using pstr = util::PathString;
@@ -575,6 +580,9 @@ Config::read(const std::vector<std::string>& cmdline_config_settings)
     const char* const env_ccache_configpath2 = getenv("CCACHE_CONFIGPATH2");
 
     fs::path sysconfdir(k_sysconfdir);
+#ifdef VENDORDIR
+    fs::path vendordir(k_vendordir);
+#endif
 #ifdef _WIN32
     if (const char* program_data = getenv("ALLUSERSPROFILE"))
       sysconfdir = fs::path(program_data) / "ccache";
@@ -582,8 +590,17 @@ Config::read(const std::vector<std::string>& cmdline_config_settings)
 
     set_system_config_path(env_ccache_configpath2 ? env_ccache_configpath2
                                                   : sysconfdir / "ccache.conf");
+
+#ifdef VENDORDIR
+    // If the config file at SYSCONFDIR doesn't exist then check VENDORDIR
+    if ( ! update_from_file(system_config_path())) {
+      set_system_config_path(vendordir/ "ccache.conf");
+      update_from_file(system_config_path());
+    }
+#else
     // A missing config file in SYSCONFDIR is OK so don't check return value.
     update_from_file(system_config_path());
+#endif
 
     const char* const env_ccache_dir = getenv("CCACHE_DIR");
     auto cmdline_cache_dir = cmdline_settings_map.find("cache_dir");
