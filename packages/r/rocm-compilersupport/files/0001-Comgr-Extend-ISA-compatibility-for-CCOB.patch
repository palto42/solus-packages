From 2d8c459a4d4c0567a7a275b4b54560d88e5c6919 Mon Sep 17 00:00:00 2001
From: Gavin Zhao <git@gzgz.dev>
Date: Sat, 21 Dec 2024 09:43:46 -0500
Subject: [PATCH] [Comgr] Extend ISA compatibility for CCOB

Signed-off-by: Gavin Zhao <git@gzgz.dev>
---
 amd/comgr/src/comgr-compiler.cpp | 57 +++++++++++++++++++++++++++++++-
 amd/comgr/src/comgr-metadata.h   |  2 ++
 2 files changed, 58 insertions(+), 1 deletion(-)

diff --git a/amd/comgr/src/comgr-compiler.cpp b/amd/comgr/src/comgr-compiler.cpp
index 9f39b939dd12..cdd14650d83a 100644
--- a/amd/comgr/src/comgr-compiler.cpp
+++ b/amd/comgr/src/comgr-compiler.cpp
@@ -39,6 +39,7 @@
 #include "comgr-compiler.h"
 #include "comgr-device-libs.h"
 #include "comgr-env.h"
+#include "comgr-metadata.h"
 #include "lld/Common/CommonLinkerContext.h"
 #include "lld/Common/Driver.h"
 #include "clang/Basic/Version.h"
@@ -1298,9 +1299,63 @@ amd_comgr_status_t AMDGPUCompiler::unbundle() {
     size_t index = output_prefix.find_last_of(".");
     output_prefix = output_prefix.substr(0, index);
 
+    std::set<std::string> co_entry_ids;
+    if (auto Error = OffloadBundler::GetBundleIDsInFile(input_file_path, BundlerConfig, co_entry_ids)) {
+      if (env::shouldEmitVerboseLogs()) {
+        LogS << "Failed to get bundle IDs in "
+             << input_file_path
+             << ", not trying to coerce compatible archs\n";
+        LogS.flush();
+      }
+    }
+    std::set<std::pair<std::string, std::string>> entry_ids_with_idents;
+    for (const auto& co_entry_id : co_entry_ids) {
+      std::string target_ident;
+      size_t pos = std::string::npos;
+      for (const auto& prefix : {"hipv4-", "hip-"}) {
+        if ((pos = co_entry_id.find(prefix)) == 0) {
+          target_ident = co_entry_id.substr(std::char_traits<char>::length(prefix));
+          break;
+        }
+      }
+
+      if (target_ident.empty()) {
+        continue;
+      }
+
+      entry_ids_with_idents.emplace(co_entry_id, target_ident);
+    }
+
     // Bundler target and output names
     for (auto entry: ActionInfo->BundleEntryIDs) {
-      BundlerConfig.TargetNames.push_back(entry);
+      std::string compat_entry = entry;
+
+      std::string entry_ident;
+      size_t pos = std::string::npos;
+      for (const auto& prefix : {"hipv4-", "hip-"}) {
+        if ((pos = entry.find(prefix)) == 0) {
+          entry_ident = entry.substr(std::char_traits<char>::length(prefix));
+          break;
+        }
+      }
+
+      if (!entry_ident.empty()) {
+        std::string best_entry;
+        for (const auto& [co_entry, co_ident] : entry_ids_with_idents) {
+          if (entry_ident == co_ident) {
+            best_entry = co_entry;
+            break;
+          } else if (metadata::isCompatibleIsaName(entry_ident, co_ident)) {
+            best_entry = co_entry;
+          }
+        }
+
+        if (!best_entry.empty()) {
+          compat_entry = best_entry;
+        }
+      }
+
+      BundlerConfig.TargetNames.push_back(compat_entry);
 
       // Add an output file for each target
       std::string output_file_name = output_prefix + '-' + entry + "." +
diff --git a/amd/comgr/src/comgr-metadata.h b/amd/comgr/src/comgr-metadata.h
index 8c2ba7ee4f9f..08aebdb76e89 100644
--- a/amd/comgr/src/comgr-metadata.h
+++ b/amd/comgr/src/comgr-metadata.h
@@ -55,6 +55,8 @@ amd_comgr_status_t getIsaMetadata(llvm::StringRef IsaName,
 
 bool isValidIsaName(llvm::StringRef IsaName);
 
+bool isCompatibleIsaName(llvm::StringRef IsaName, llvm::StringRef CodeObjectIsaName);
+
 amd_comgr_status_t getElfIsaName(DataObject *DataP, std::string &IsaName);
 
 amd_comgr_status_t lookUpCodeObject(DataObject *DataP,
-- 
2.47.0

