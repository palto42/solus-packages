From: Carsten Schoenert <c.schoenert@t-online.de>
Date: Tue, 16 Aug 2022 09:18:34 +0200
Subject: Adjust __unused__ macro after glibc changes 2.33++

The build is breaking with glibc >= 2.33 due changes in cdefs.h.
This patch is mostly just a hack and no proper solution, it's taken from
the Gentoo people.

Author: s.zharkoff@gmail.com
Origin: https://bugs.gentoo.org/828550
Forwarded: no
Last-Update: 2022-08-16
---
 eiffel.c  |  2 +-
 general.h |  2 +-
 lregex.c  | 30 +++++++++++++++---------------
 lua.c     |  2 +-
 main.c    |  2 +-
 options.c | 24 ++++++++++++------------
 parse.c   |  2 +-
 python.c  |  2 +-
 8 files changed, 33 insertions(+), 33 deletions(-)

diff --git a/eiffel.c b/eiffel.c
index e2f5a5c..f1293f1 100644
--- a/build/ctags/eiffel.c
+++ b/build/ctags/eiffel.c
@@ -807,7 +807,7 @@ static void findKeyword (tokenInfo *const token, const keywordId keyword)
 
 static boolean parseType (tokenInfo *const token);
 
-static void parseGeneric (tokenInfo *const token, boolean declaration __unused__)
+static void parseGeneric (tokenInfo *const token, boolean declaration __arduino_unused__)
 {
 	unsigned int depth = 0;
 #ifdef TYPE_REFERENCE_TOOL
diff --git a/general.h b/general.h
index 2d1d629..8282a8b 100644
--- a/build/ctags/general.h
+++ b/build/ctags/general.h
@@ -57,7 +57,7 @@
  *  to prevent warnings about unused variables.
  */
 #if (__GNUC__ > 2  ||  (__GNUC__ == 2  &&  __GNUC_MINOR__ >= 7)) && !defined (__GNUG__)
-# define __unused__  __attribute__((unused))
+# define __arduino_unused__   __attribute__ ((__unused__))
 # define __printf__(s,f)  __attribute__((format (printf, s, f)))
 #else
 # define __unused__
diff --git a/lregex.c b/lregex.c
index 37d7ea0..addf35f 100644
--- a/build/ctags/lregex.c
+++ b/build/ctags/lregex.c
@@ -538,11 +538,11 @@ extern void findRegexTags (void)
 #endif  /* HAVE_REGEX */
 
 extern void addTagRegex (
-		const langType language __unused__,
-		const char* const regex __unused__,
-		const char* const name __unused__,
-		const char* const kinds __unused__,
-		const char* const flags __unused__)
+		const langType language __arduino_unused__,
+		const char* const regex __arduino_unused__,
+		const char* const name __arduino_unused__,
+		const char* const kinds __arduino_unused__,
+		const char* const flags __arduino_unused__)
 {
 #ifdef HAVE_REGEX
 	Assert (regex != NULL);
@@ -564,10 +564,10 @@ extern void addTagRegex (
 }
 
 extern void addCallbackRegex (
-		const langType language __unused__,
-		const char* const regex __unused__,
-		const char* const flags __unused__,
-		const regexCallback callback __unused__)
+		const langType language __arduino_unused__,
+		const char* const regex __arduino_unused__,
+		const char* const flags __arduino_unused__,
+		const regexCallback callback __arduino_unused__)
 {
 #ifdef HAVE_REGEX
 	Assert (regex != NULL);
@@ -581,7 +581,7 @@ extern void addCallbackRegex (
 }
 
 extern void addLanguageRegex (
-		const langType language __unused__, const char* const regex __unused__)
+		const langType language __arduino_unused__, const char* const regex __arduino_unused__)
 {
 #ifdef HAVE_REGEX
 	if (! regexBroken)
@@ -602,7 +602,7 @@ extern void addLanguageRegex (
 */
 
 extern boolean processRegexOption (const char *const option,
-								   const char *const parameter __unused__)
+								   const char *const parameter __arduino_unused__)
 {
 	boolean handled = FALSE;
 	const char* const dash = strchr (option, '-');
@@ -624,7 +624,7 @@ extern boolean processRegexOption (const char *const option,
 	return handled;
 }
 
-extern void disableRegexKinds (const langType language __unused__)
+extern void disableRegexKinds (const langType language __arduino_unused__)
 {
 #ifdef HAVE_REGEX
 	if (language <= SetUpper  &&  Sets [language].count > 0)
@@ -639,8 +639,8 @@ extern void disableRegexKinds (const langType language __unused__)
 }
 
 extern boolean enableRegexKind (
-		const langType language __unused__,
-		const int kind __unused__, const boolean mode __unused__)
+		const langType language __arduino_unused__,
+		const int kind __arduino_unused__, const boolean mode __arduino_unused__)
 {
 	boolean result = FALSE;
 #ifdef HAVE_REGEX
@@ -660,7 +660,7 @@ extern boolean enableRegexKind (
 	return result;
 }
 
-extern void printRegexKinds (const langType language __unused__, boolean indent __unused__)
+extern void printRegexKinds (const langType language __arduino_unused__, boolean indent __arduino_unused__)
 {
 #ifdef HAVE_REGEX
 	if (language <= SetUpper  &&  Sets [language].count > 0)
diff --git a/lua.c b/lua.c
index d385544..91da6ab 100644
--- a/build/ctags/lua.c
+++ b/build/ctagslua.c
@@ -37,7 +37,7 @@ static kindOption LuaKinds [] = {
 */
 
 /* for debugging purposes */
-static void __unused__ print_string (char *p, char *q)
+static void __arduino_unused__ print_string (char *p, char *q)
 {
 	for ( ; p != q; p++)
 		fprintf (errout, "%c", *p);
diff --git a/main.c b/main.c
index 79948fe..8dbf31d 100644
--- a/build/ctags/main.c
+++ b/build/ctags/main.c
@@ -522,7 +522,7 @@ static void makeTags (cookedArgs *args)
  *		Start up code
  */
 
-extern int main (int __unused__ argc, char **argv)
+extern int main (int __arduino_unused__ argc, char **argv)
 {
 	cookedArgs *args;
 #ifdef VMS
diff --git a/options.c b/options.c
index 8f68469..60623e1 100644
--- a/build/ctags/options.c
+++ b/build/ctags/options.c
@@ -731,7 +731,7 @@ static void processEtagsInclude (
 }
 
 static void processExcludeOption (
-		const char *const option __unused__, const char *const parameter)
+		const char *const option __arduino_unused__, const char *const parameter)
 {
 	const char *const fileName = parameter + 1;
 	if (parameter [0] == '\0')
@@ -869,7 +869,7 @@ static void processFieldsOption (
 }
 
 static void processFilterTerminatorOption (
-		const char *const option __unused__, const char *const parameter)
+		const char *const option __arduino_unused__, const char *const parameter)
 {
 	freeString (&Option.filterTerminator);
 	Option.filterTerminator = stringCopy (parameter);
@@ -931,8 +931,8 @@ static void printProgramIdentification (void)
 }
 
 static void processHelpOption (
-		const char *const option __unused__,
-		const char *const parameter __unused__)
+		const char *const option __arduino_unused__,
+		const char *const parameter __arduino_unused__)
 {
 	printProgramIdentification ();
 	putchar ('\n');
@@ -1140,8 +1140,8 @@ static void processLanguagesOption (
 }
 
 static void processLicenseOption (
-		const char *const option __unused__,
-		const char *const parameter __unused__)
+		const char *const option __arduino_unused__,
+		const char *const parameter __arduino_unused__)
 {
 	printProgramIdentification ();
 	puts ("");
@@ -1167,8 +1167,8 @@ static void processListKindsOption (
 }
 
 static void processListMapsOption (
-		const char *const __unused__ option,
-		const char *const __unused__ parameter)
+		const char *const __arduino_unused__ option,
+		const char *const __arduino_unused__ parameter)
 {
 	if (parameter [0] == '\0' || strcasecmp (parameter, "all") == 0)
 	    printLanguageMaps (LANG_AUTO);
@@ -1184,8 +1184,8 @@ static void processListMapsOption (
 }
 
 static void processListLanguagesOption (
-		const char *const option __unused__,
-		const char *const parameter __unused__)
+		const char *const option __arduino_unused__,
+		const char *const parameter __arduino_unused__)
 {
 	printLanguageList ();
 	exit (0);
@@ -1359,8 +1359,8 @@ static void processIgnoreOption (const char *const list)
 }
 
 static void processVersionOption (
-		const char *const option __unused__,
-		const char *const parameter __unused__)
+		const char *const option __arduino_unused__,
+		const char *const parameter __arduino_unused__)
 {
 	printProgramIdentification ();
 	exit (0);
diff --git a/parse.c b/parse.c
index 0b5e2c3..4fd4e08 100644
--- a/build/ctags/parse.c
+++ b/build/ctags/parse.c
@@ -376,7 +376,7 @@ extern void freeParserResources (void)
 */
 
 extern void processLanguageDefineOption (
-		const char *const option, const char *const parameter __unused__)
+		const char *const option, const char *const parameter __arduino_unused__)
 {
 #ifdef HAVE_REGEX
 	if (parameter [0] == '\0')
diff --git a/python.c b/python.c
index bf797de..2eb3d96 100644
--- a/build/ctags/python.c
+++ b/build/ctags/python.c
@@ -135,7 +135,7 @@ static boolean isIdentifierCharacter (int c)
  * extract all relevant information and create a tag.
  */
 static void makeFunctionTag (vString *const function,
-	vString *const parent, int is_class_parent, const char *arglist __unused__)
+	vString *const parent, int is_class_parent, const char *arglist __arduino_unused__)
 {
 	tagEntryInfo tag;
 	initTagEntry (&tag, vStringValue (function));
