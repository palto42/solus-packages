From 1c24e1cb459035cb54eb4bfe34ad70d2d9e74dac Mon Sep 17 00:00:00 2001
From: Joey Riches <josephriches@gmail.com>
Date: Mon, 23 Sep 2024 20:41:32 +0100
Subject: [PATCH 1/1] rules: Disable nvidia wayland checks

---
 data/61-gdm.rules.in | 31 -------------------------------
 1 file changed, 31 deletions(-)

diff --git a/data/61-gdm.rules.in b/data/61-gdm.rules.in
index 8629bec4f..14f8aed55 100644
--- a/data/61-gdm.rules.in
+++ b/data/61-gdm.rules.in
@@ -33,38 +33,8 @@ KERNEL!="nvidia", GOTO="gdm_nvidia_end"
 SUBSYSTEM!="module", GOTO="gdm_nvidia_end"
 ACTION!="add", GOTO="gdm_nvidia_end"
 RUN+="/usr/bin/touch /run/udev/gdm-machine-has-vendor-nvidia-driver"
-
-# Import nvidia kernel parameters
-IMPORT{program}="/bin/sh -c \"sed -e 's/: /=/g' -e 's/\([^[:upper:]]\)\([[:upper:]]\)/\1_\2/g' -e 's/[[:lower:]]/\U&/g' -e 's/^/NVIDIA_/' /proc/driver/nvidia/params\""
-
-# Check if S0ix-based power management is available
-# If it is, there's no need to check for the suspend/resume services
-ENV{NVIDIA_ENABLE_S0IX_POWER_MANAGEMENT}=="1", GOTO="gdm_nvidia_suspend_end"
-
-# Check if suspend/resume services necessary for working wayland support is available
-TEST{0711}!="/usr/bin/nvidia-sleep.sh", GOTO="gdm_disable_wayland"
-TEST{0711}!="/usr/lib/systemd/system-sleep/nvidia", GOTO="gdm_disable_wayland"
-
-ENV{NVIDIA_PRESERVE_VIDEO_MEMORY_ALLOCATIONS}!="1", GOTO="gdm_disable_wayland"
-IMPORT{program}="/bin/sh -c 'echo NVIDIA_HIBERNATE=`systemctl is-enabled nvidia-hibernate`'"
-ENV{NVIDIA_HIBERNATE}!="enabled", GOTO="gdm_disable_wayland"
-IMPORT{program}="/bin/sh -c 'echo NVIDIA_RESUME=`systemctl is-enabled nvidia-resume`'"
-ENV{NVIDIA_RESUME}!="enabled", GOTO="gdm_disable_wayland"
-IMPORT{program}="/bin/sh -c 'echo NVIDIA_SUSPEND=`systemctl is-enabled nvidia-suspend`'"
-ENV{NVIDIA_SUSPEND}!="enabled", GOTO="gdm_disable_wayland"
-LABEL="gdm_nvidia_suspend_end"
 LABEL="gdm_nvidia_end"
 
-# If this is a hybrid graphics setup, take note
-KERNEL!="card[1-9]*", GOTO="gdm_hybrid_graphics_check_end"
-KERNEL=="card[1-9]-*", GOTO="gdm_hybrid_graphics_check_end"
-SUBSYSTEM!="drm", GOTO="gdm_hybrid_graphics_check_end"
-ACTION!="add", GOTO="gdm_hybrid_graphics_check_end"
-IMPORT{program}="/bin/sh -c \"echo GDM_NUMBER_OF_GRAPHICS_CARDS=`ls -1d /sys/class/drm/card[0-9] | wc -l`\""
-ENV{GDM_NUMBER_OF_GRAPHICS_CARDS}=="1", RUN+="/usr/bin/rm -f /run/udev/gdm-machine-has-hybrid-graphics"
-ENV{GDM_NUMBER_OF_GRAPHICS_CARDS}!="1", RUN+="/usr/bin/touch /run/udev/gdm-machine-has-hybrid-graphics"
-LABEL="gdm_hybrid_graphics_check_end"
-
 # Disable wayland in situation where we're in a guest with a virtual gpu and host passthrough gpu
 #LABEL="gdm_virt_passthrough_check"
 TEST!="/run/udev/gdm-machine-has-hybrid-graphics", GOTO="gdm_virt_passthrough_check_end"
@@ -95,4 +65,3 @@ RUN+="@libexecdir@/gdm-runtime-config set daemon WaylandEnable false"
 GOTO="gdm_end"
 
 LABEL="gdm_end"
-
-- 
2.46.1

