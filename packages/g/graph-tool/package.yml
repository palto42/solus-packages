name       : graph-tool
version    : '2.97'
release    : 23
source     :
    - https://downloads.skewed.de/graph-tool/graph-tool-2.97.tar.zst : 28ca2b2297e26a19e4785ea7fc70bee28965a56a8b05bfd9785aa291d5d96b2b
license    : GPL-3.0-or-later
component  : programming.python
homepage   : https://graph-tool.skewed.de/
summary    : Efficient python module for analysis of graphs
description: |
    Graph-tool is an efficient python module for manipulation and statistical analysis of graphs
builddeps  :
    - pkgconfig(cairomm-1.0)
    - pkgconfig(expat)
    - pkgconfig(libsparsehash)
    - pkgconfig(libxcrypt)
    - pkgconfig(py3cairo)
    - pkgconfig(python3)
    - CGAL-devel
    - libboost-devel
    - matplotlib
    - scipy
rundeps    :
    - matplotlib
    - python-zstandard
    - python3-cairo
    - scipy
# If clang set to yes, the submodules give an error when imported
#clang      : yes
# With ccache enabled errors out `ccache: error: Serialized result too large (8917414233 > 4294967295)`
ccache     : no
setup      : |
    %configure PREFIX=/usr PYTHON=python3
build      : |
    # Maximum observed single compile job size is around 17 GiB Resident with sizes in the range 3-7 GiB the most common.
    # Likely due to poor job parallelism in make, the build will fan out to $CPUs -> 4-6 CPUs -> 1-2 CPUs.
    # For systems with 16 GiB RAM, make -j1 is maybe possible.
    # For systems with 32 GiB RAM, make -j2 is probably the maximum.
    # For systems with 48 GiB RAM, make -j8 is likely the top.
    # For systems with 64 GiB RAM, make -j2 is probably the maximum. (Should be used for the Buildserver)
    # Swap partitions/files must be used while building.
    %make -j2
install    : |
    %make_install
